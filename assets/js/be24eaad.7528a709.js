"use strict";(self.webpackChunkmask_docs=self.webpackChunkmask_docs||[]).push([[336],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return y}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),y=r,m=d["".concat(s,".").concat(y)]||d[y]||u[y]||o;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},768:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={},s="PayloadContainer",p={unversionedId:"payload-format/payload-container",id:"payload-format/payload-container",title:"PayloadContainer",description:"Status: This format has not been shipped to production yet. It might change at any time.",source:"@site/docs/payload-format/payload-container.md",sourceDirName:"payload-format",slug:"/payload-format/payload-container",permalink:"/docs/payload-format/payload-container",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/payload-format/payload-container.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"npm scope",permalink:"/docs/npm-scope"},next:{title:"Payload version -37",permalink:"/docs/payload-format/payload-v37"}},c={},u=[{value:"Abstract",id:"abstract",level:2},{value:"Format",id:"format",level:2},{value:"0th byte is <code>0x00</code>",id:"0th-byte-is-0x00",level:3},{value:"0th byte is <code>0x01</code>",id:"0th-byte-is-0x01",level:3},{value:"0th-byte other value",id:"0th-byte-other-value",level:3},{value:"Next step",id:"next-step",level:2}],d={toc:u};function y(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"payloadcontainer"},(0,o.kt)("inlineCode",{parentName:"h1"},"PayloadContainer")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Status: This format has not been shipped to production yet. It might change at any time.")),(0,o.kt)("h2",{id:"abstract"},"Abstract"),(0,o.kt)("p",null,"This is a simple binary format that describes a binary message and its signature (optionally)."),(0,o.kt)("p",null,"It is used in the encryption of Mask Network."),(0,o.kt)("h2",{id:"format"},"Format"),(0,o.kt)("p",null,"The 0th byte is a switch. The interpretation of the rest part depends on the 0th byte."),(0,o.kt)("h3",{id:"0th-byte-is-0x00"},"0th byte is ",(0,o.kt)("inlineCode",{parentName:"h3"},"0x00")),(0,o.kt)("p",null,"If the payload length is less than 33 bytes, it is invalid."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Byte 1 to 32 is the ",(0,o.kt)("inlineCode",{parentName:"li"},"SHA-256")," hash of the ",(0,o.kt)("inlineCode",{parentName:"li"},"message"),"."),(0,o.kt)("li",{parentName:"ul"},"Byte 33 to the end is the ",(0,o.kt)("inlineCode",{parentName:"li"},"message"),".")),(0,o.kt)("h3",{id:"0th-byte-is-0x01"},"0th byte is ",(0,o.kt)("inlineCode",{parentName:"h3"},"0x01")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Byte 1 to the end is the ",(0,o.kt)("inlineCode",{parentName:"li"},"message"),".")),(0,o.kt)("h3",{id:"0th-byte-other-value"},"0th-byte other value"),(0,o.kt)("p",null,"It's an invalid payload."),(0,o.kt)("h2",{id:"next-step"},"Next step"),(0,o.kt)("p",null,"Once you parsed the ",(0,o.kt)("inlineCode",{parentName:"p"},"message")," out as a binary, you should further try to parse the ",(0,o.kt)("inlineCode",{parentName:"p"},"message")," as a ",(0,o.kt)("a",{parentName:"p",href:"/docs/payload-format/payload-v37"},"Payload37")," object."))}y.isMDXComponent=!0}}]);