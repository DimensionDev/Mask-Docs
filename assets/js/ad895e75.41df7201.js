"use strict";(self.webpackChunkmask_docs=self.webpackChunkmask_docs||[]).push([[288],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,l(l({ref:t},c),{},{components:n})):r.createElement(h,l({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3581:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),l=["components"],i={id:"faq",slig:"/",title:"FQA",sidebar_position:100},s="FAQ",p={unversionedId:"faq",id:"faq",title:"FQA",description:"How to remove unused locale fields?",source:"@site/docs/FAQ.md",sourceDirName:".",slug:"/faq",permalink:"/docs/faq",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/FAQ.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{id:"faq",slig:"/",title:"FQA",sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"EVM",permalink:"/docs/web3/EVM"},next:{title:"Dependencies upgrading",permalink:"/docs/dependencies"}},c={},u=[{value:"How to remove unused locale fields?",id:"how-to-remove-unused-locale-fields",level:2},{value:"How to resolve merge conflicts in <code>pnpm-lock.yaml</code>?",id:"how-to-resolve-merge-conflicts-in-pnpm-lockyaml",level:2},{value:"Why my Git hooks don&#39;t work?",id:"why-my-git-hooks-dont-work",level:2},{value:"How to fix cspell errors in CI?",id:"how-to-fix-cspell-errors-in-ci",level:2},{value:"Why were my components rendered many times?",id:"why-were-my-components-rendered-many-times",level:2},{value:"How to download CI builds?",id:"how-to-download-ci-builds",level:2},{value:"How to resolve &quot;No CORS Headers&quot; problem",id:"how-to-resolve-no-cors-headers-problem",level:2},{value:"How to clear the local settings?",id:"how-to-clear-the-local-settings",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"faq"},"FAQ"),(0,a.kt)("h2",{id:"how-to-remove-unused-locale-fields"},"How to remove unused locale fields?"),(0,a.kt)("p",null,"You can you the command from the ",(0,a.kt)("inlineCode",{parentName:"p"},"locale-kit"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"}," npx gulp locale-kit --remove-unused-keys\n")),(0,a.kt)("h2",{id:"how-to-resolve-merge-conflicts-in-pnpm-lockyaml"},"How to resolve merge conflicts in ",(0,a.kt)("inlineCode",{parentName:"h2"},"pnpm-lock.yaml"),"?"),(0,a.kt)("p",null,"Merge the target branch into yours and never mind those conflicts in ",(0,a.kt)("inlineCode",{parentName:"p"},"pnpm-lock.yaml"),". And checkout the file to be the one on the target branch to revert changes your branch took in. Then run ",(0,a.kt)("inlineCode",{parentName:"p"},"pnpm install")," to up the lockfile to date."),(0,a.kt)("p",null,"E.g., your ",(0,a.kt)("inlineCode",{parentName:"p"},"feat/fantasy")," branch conflicts with ",(0,a.kt)("inlineCode",{parentName:"p"},"develop")," branch."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"> git branch --show-current\nfeat/fantasy\n\n# merge the develop branch and never manually handle the conflicts in lock file\n> git merge develop\n\n# check out the lock file from the base branch\n> git checkout develop -- pnpm-lock.yaml\n\n# update the lockfile\n> pnpm install\n")),(0,a.kt)("h2",{id:"why-my-git-hooks-dont-work"},"Why my Git hooks don't work?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx husky install # on project root directory\n")),(0,a.kt)("h2",{id:"how-to-fix-cspell-errors-in-ci"},"How to fix cspell errors in CI?"),(0,a.kt)("p",null,"This project uses ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/streetsidesoftware/cspell"},"cspell")," for checking typos. You can add unlisted words into ",(0,a.kt)("inlineCode",{parentName:"p"},"cspell.json")," to bypass cspell checking. After you update the configuration file, you could run checking locally before pushing it to make sure your patch is working."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx cspell lint pattern_that_match_your_files\n\n# e.g. check spell of the RSS3 plugin\nnpx cspell lint ./packages/plugins/RSS3/**/*\n")),(0,a.kt)("p",null,"Learn more: ",(0,a.kt)("a",{parentName:"p",href:"https://cspell.org/configuration/#cspelljson"},(0,a.kt)("inlineCode",{parentName:"a"},"cspell.json"))),(0,a.kt)("h2",{id:"why-were-my-components-rendered-many-times"},"Why were my components rendered many times?"),(0,a.kt)("p",null,"All components should working in ",(0,a.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/strict-mode.html"},"Strict Mode")," and React 18 new ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/reactwg/react-18/discussions/19"},"Strict Effects"),"."),(0,a.kt)("p",null,"If you found your code not working correctly, please read the documentation above. In addition, you can comment out ",(0,a.kt)("inlineCode",{parentName:"p"},"<StrictMode />")," temporarily to verify if it is a problem with your component not supporting Strict Mode."),(0,a.kt)("p",null,"DO NOT remove ",(0,a.kt)("inlineCode",{parentName:"p"},"<StrictMode />"),"."),(0,a.kt)("h2",{id:"how-to-download-ci-builds"},"How to download CI builds?"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MaskNetwork.base.zip"),(0,a.kt)("td",{parentName:"tr",align:null},"The default build, currently is the same as the Chromium build.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MaskNetwork.chromium-beta.zip"),(0,a.kt)("td",{parentName:"tr",align:null},"Build for Chromium based browsers with some insider features turned on.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MaskNetwork.chromium.zip"),(0,a.kt)("td",{parentName:"tr",align:null},"Build for Chromium based browsers")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MaskNetwork.firefox.zip"),(0,a.kt)("td",{parentName:"tr",align:null},"Build for Firefox")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MaskNetwork.gecko.zip"),(0,a.kt)("td",{parentName:"tr",align:null},"Build for Android native Mask app")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MaskNetwork.iOS.zip"),(0,a.kt)("td",{parentName:"tr",align:null},"Build for iOS native Mask app")))),(0,a.kt)("p",null,"You can download these builds in two places."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Github: Open the pull request page, and click the ",(0,a.kt)("strong",{parentName:"p"},"Actions")," tab. Then on the opened page, click the ",(0,a.kt)("strong",{parentName:"p"},"build")," sub-item on the ",(0,a.kt)("strong",{parentName:"p"},"Compile")," item. On the action detailed page, click the ",(0,a.kt)("strong",{parentName:"p"},"Summary")," tab. Now you can download builds on the ",(0,a.kt)("strong",{parentName:"p"},"Artifacts")," section."),(0,a.kt)("p",{parentName:"li"},"E.g., ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/DimensionDev/Maskbook/actions/runs/2026749204"},"https://github.com/DimensionDev/Maskbook/actions/runs/2026749204"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"CircleCI: Open the pull request page, and scroll down to the review status card. Click ",(0,a.kt)("strong",{parentName:"p"},"Show all checks")," to find the ",(0,a.kt)("strong",{parentName:"p"},"\nci/circleci: build")," item, and click the ",(0,a.kt)("strong",{parentName:"p"},"details")," link. On the opened CircleCI page, click the ",(0,a.kt)("strong",{parentName:"p"},"ARTIFACTS")," tab."),(0,a.kt)("p",{parentName:"li"},"E.g., ",(0,a.kt)("a",{parentName:"p",href:"https://app.circleci.com/pipelines/github/DimensionDev/Maskbook/24886/workflows/eeabcc93-6152-437f-a65d-24f0acee34a9/jobs/52795/artifacts"},"https://app.circleci.com/pipelines/github/DimensionDev/Maskbook/24886/workflows/eeabcc93-6152-437f-a65d-24f0acee34a9/jobs/52795/artifacts")))),(0,a.kt)("h2",{id:"how-to-resolve-no-cors-headers-problem"},'How to resolve "No CORS Headers" problem'),(0,a.kt)("p",null,"Please contact the service maintainer to add CORS headers, the extension will send requests in following origins:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Browser"),(0,a.kt)("th",{parentName:"tr",align:null},"Origin"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Chromium"),(0,a.kt)("td",{parentName:"tr",align:null},"chrome-extension://jkoeaghipilijlahjplgbfiocjhldnap")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Firefox"),(0,a.kt)("td",{parentName:"tr",align:null},"moz-extension://id")))),(0,a.kt)("p",null,"The Chromium extension has a fixed id, but only on production mode. And the Firefox browser will set a new id each time it boots an extension. So, in summary, it's better to allow all origins which match the regexp below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt"},"/.*-extension:\\/\\/[^\\S]+/\n")),(0,a.kt)("p",null,"If you cannot reach the service maintainer another workaround is to use a proxy server to add CORS headers. To enable it try to change the request URL into ",(0,a.kt)("inlineCode",{parentName:"p"},"https://cors.r2d2.to/?=[url]"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// before\nfetch('https://api.com')\n\n// after\nfetch('https://cors.r2d2.to/?=https://api.com')\n")),(0,a.kt)("h2",{id:"how-to-clear-the-local-settings"},"How to clear the local settings?"),(0,a.kt)("p",null,"Open the background.html of the extension and execute the following scripts in the console."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"browser.storage.local.clear()\n")))}m.isMDXComponent=!0}}]);